# Generated by Django 2.1.5 on 2019-01-19 16:41

import uuid

import django.db.models.deletion
import jsonfield.encoder
import jsonfield.fields
from django.conf import settings
from django.db import migrations, models

import openslides.utils.models


def add_default_projector(apps, schema_editor):
    """
    Adds default projector and activates clock.
    """
    # We get the model from the versioned app registry;
    # if we directly import it, it will be the wrong version.
    Projector = apps.get_model("core", "Projector")
    projector_config = {}
    projector_config[uuid.uuid4().hex] = {"name": "core/clock", "stable": True}
    # We use bulk_create here because we do not want model's save() method
    # to be called because we do not want our autoupdate signals to be
    # triggered.
    Projector.objects.bulk_create(
        [Projector(name="Default projector", config=projector_config)]
    )


def add_projection_defaults(apps, schema_editor):
    """
    Adds projectiondefaults.
    """
    Projector = apps.get_model("core", "Projector")
    ProjectionDefault = apps.get_model("core", "ProjectionDefault")
    # The default projector (pk=1) is always available.
    default_projector = Projector.objects.get(pk=1)

    projectiondefaults = []

    projectiondefaults.append(
        ProjectionDefault(
            name="agenda_all_items", display_name="Agenda", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="topics", display_name="Topics", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="agenda_list_of_speakers",
            display_name="List of speakers",
            projector=default_projector,
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="agenda_current_list_of_speakers",
            display_name="Current list of speakers",
            projector=default_projector,
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="motions", display_name="Motions", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="motionBlocks",
            display_name="Motion blocks",
            projector=default_projector,
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="assignments", display_name="Elections", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="users", display_name="Participants", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="mediafiles", display_name="Files", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="messages", display_name="Messages", projector=default_projector
        )
    )
    projectiondefaults.append(
        ProjectionDefault(
            name="countdowns", display_name="Countdowns", projector=default_projector
        )
    )

    # Create all new projectiondefaults
    ProjectionDefault.objects.bulk_create(projectiondefaults)


class Migration(migrations.Migration):

    initial = True

    dependencies = [migrations.swappable_dependency(settings.AUTH_USER_MODEL)]

    operations = [
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_use_chat", "Can use the chat"),
                    ("can_manage_chat", "Can manage the chat"),
                ),
                "default_permissions": (),
            },
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ConfigStore",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(db_index=True, max_length=255, unique=True)),
                (
                    "value",
                    jsonfield.fields.JSONField(
                        dump_kwargs={
                            "cls": jsonfield.encoder.JSONEncoder,
                            "separators": (",", ":"),
                        },
                        load_kwargs={},
                    ),
                ),
            ],
            options={
                "permissions": (
                    ("can_manage_config", "Can manage configuration"),
                    ("can_manage_logos_and_fonts", "Can manage logos and fonts"),
                ),
                "default_permissions": (),
            },
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Countdown",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=256)),
                ("running", models.BooleanField(default=False)),
                ("default_time", models.PositiveIntegerField(default=60)),
                ("countdown_time", models.FloatField(default=60)),
            ],
            options={"default_permissions": ()},
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProjectionDefault",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256)),
                ("display_name", models.CharField(max_length=256)),
            ],
            options={"default_permissions": ()},
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Projector",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "config",
                    jsonfield.fields.JSONField(
                        dump_kwargs={
                            "cls": jsonfield.encoder.JSONEncoder,
                            "separators": (",", ":"),
                        },
                        load_kwargs={},
                    ),
                ),
                ("scale", models.IntegerField(default=0)),
                ("scroll", models.IntegerField(default=0)),
                ("width", models.PositiveIntegerField(default=1024)),
                ("height", models.PositiveIntegerField(default=768)),
                ("name", models.CharField(blank=True, max_length=255, unique=True)),
                ("blank", models.BooleanField(default=False)),
            ],
            options={
                "permissions": (
                    ("can_see_projector", "Can see the projector"),
                    ("can_manage_projector", "Can manage the projector"),
                    ("can_see_frontpage", "Can see the front page"),
                ),
                "default_permissions": (),
            },
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="ProjectorMessage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField(blank=True)),
            ],
            options={"default_permissions": ()},
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
            ],
            options={
                "ordering": ("name",),
                "permissions": (("can_manage_tags", "Can manage tags"),),
                "default_permissions": (),
            },
            bases=(openslides.utils.models.RESTModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name="projectiondefault",
            name="projector",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="projectiondefaults",
                to="core.Projector",
            ),
        ),
        migrations.RunPython(add_default_projector),
        migrations.RunPython(add_projection_defaults),
    ]
